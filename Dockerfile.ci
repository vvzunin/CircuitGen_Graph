# Считываем аргумент из командной строки. 
# Если он не задан, то выбираем систему по умолчанию.
# По-умолчанию: ubuntu:22.04
ARG system="ubuntu:22.04"
ARG doxygen_version="1.13.2"

# Используем базовую систему, заданную аргументом system.
FROM ${system}

ENV DEBIAN_FRONTEND=noninteractive

# Обновляем системные пакеты
RUN apt-get update && \
  apt-get upgrade -y

# Устанавливаем необходимые инструменты и зависимости
RUN apt-get install -y \
  software-properties-common \
  bison \
  build-essential \
  clang-format-15 \
  clang-tidy \
  cmake \
  cppcheck \
  curl \
  flex \
  g++ \
  gcc \
  ghostscript \
  git \
  graphviz \
  lcov \
  make \
  ninja-build \
  openssl \
  python3-pip \
  python3.10 \
  python3.10-dev \
  wget \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /llvm
RUN apt-get update && apt-get install -y wget lsb-release gnupg
RUN wget https://apt.llvm.org/llvm.sh
RUN chmod +x llvm.sh
RUN ./llvm.sh 17
WORKDIR /
RUN rm -rf /llvm

# Установка LLVM для Doxygen
# RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.3/LLVM-20.1.3-Linux-X64.tar.xz
# RUN tar xf LLVM-20.1.3-Linux-ARM64.tar.xz
# RUN rm LLVM-20.1.3-Linux-ARM64.tar.xz
# RUN cd LLVM-20.1.3-Linux-ARM64

# Загружаем и устанавливаем Doxygen. Версия задается переменной doxygen_version
# Для сборки требуется bison и flex
ARG doxygen_version

RUN wget https://www.doxygen.nl/files/doxygen-${doxygen_version}.src.tar.gz && \
    tar xf doxygen-${doxygen_version}.src.tar.gz && \
    rm doxygen-${doxygen_version}.src.tar.gz && \
    cd doxygen-${doxygen_version} && \
    mkdir build && \
    cd build && \
    cmake -G "Unix Makefiles" ../ && \
    make -j $(nproc) && \
    make install && \
    cd ../.. && \
    rm -r doxygen-${doxygen_version}

# Устанавливаем Python-зависимости
RUN pip3 install codespell jinja2 Pygments

# Создаем рабочую директорию
WORKDIR /circuitgen
